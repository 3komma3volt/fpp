#!/bin/bash

BINDIR=$(cd $(dirname $0) && pwd)

# See if we should be running from /home/fpp/fpp
if [ "x${BINDIR}" == "x/opt/fpp/scripts" -a -f "/home/fpp/fpp/scripts/fpp_boot" ]
then
    exec /home/fpp/fpp/scripts/fpp_boot
fi

. ${BINDIR}/common
. ${BINDIR}/functions

if [ ! -d ${LOGDIR} ]
then
	mkdir -p ${LOGDIR}
	chown ${FPPUSER}.${FPPUSER} ${LOGDIR}
	chmod 775 ${LOGDIR}
fi

if [ ! -f "${MEDIADIR}/.auto_update_disabled" ]
then
    WaitForInterfacesUp
	${SCRIPTDIR}/git_pull
fi

remountRootReadWrite

${SCRIPTDIR}/upgrade_config

${SCRIPTDIR}/timezone_sync

remountRootReadOnlyIfNeeded

if [ "${FPPPLATFORM}" = "BeagleBone Black" ]
then
	configureGPIOPins
fi

if [ "${FPPPLATFORM}" = "Raspberry Pi" ]
then
        PiLCDenabled=$(getSetting PI_LCD_Enabled)

        if [ "x${PiLCDenabled}" = "x1" ]
        then
          echo "FPP - Checking for configured LCD, LCD Enabled, starting LCD daemon"
          ${FPPDIR}/scripts/lcd/fppLCD start
        else
          echo "FPP - Checking for configured LCD, LCD Disabled"
        fi
fi

##############################################################################
# Leave these things till last so user can see output of anything above here
##############################################################################
SCREENSAVER=$(getSetting screensaver)
if [ "x${SCREENSAVER}" = "x1" ]
then
        echo "FPP - Turning ON screen blanking"
        setterm -blank 1
else
        echo "FPP - Turning OFF screen blanking"
        setterm -blank 0
fi

. ${SCRIPTDIR}/fppd_start

